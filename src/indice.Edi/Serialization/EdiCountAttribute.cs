using System;

namespace indice.Edi.Serialization
{

    /// <summary>
    /// The scope of the EDI Control count. Used in conjunction with <see cref="EdiCountAttribute"/>.
    /// </summary>
    public enum EdiCountScope : byte
    {
        /// <summary>
        /// Gives the count of <see cref="Segments"/>. Its meaning is contextual and is related to the <seealso cref="EdiStructureType"/> that this value is located.
        /// </summary>
        Segments = 0,

        /// <summary>
        /// Gives the count of <see cref="Messages"/>. Its meaning is contextual and is related to the <seealso cref="EdiStructureType"/>.
        /// </summary>
        Messages = 1,

        /// <summary>
        /// Gives the count of <see cref="Groups"/>. Its meaning is contextual and is related to the <seealso cref="EdiStructureType"/>.
        /// </summary>
        Groups = 2,
    }

    /// <summary>
    /// Use <see cref="EdiCountAttribute"/> for Counting the Edi controls inside the transmission.
    /// </summary>
    /// <remarks>Used in conjunction with <see cref="EdiValueAttribute"/>. Will be used only upon serialization.</remarks>
    [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field, Inherited = false, AllowMultiple = false)]
    public sealed class EdiCountAttribute : EdiAttribute
    {
        private readonly EdiCountScope _Scope;

        /// <summary>
        /// The scope of the autogenerated value. <seealso cref="EdiCountScope"/>
        /// </summary>
        public EdiCountScope Scope {
            get { return _Scope; }
        }

        /// <summary>
        /// Creates a <see cref="EdiCountAttribute"/>. Marks a value that the serializer should be generating.
        /// </summary>
        /// <param name="scope">The scope of the autogenerated value. Message etc.</param>
        public EdiCountAttribute(EdiCountScope scope) {
            _Scope = scope;
        }

        /// <summary>
        /// String representation of <see cref="EdiCountAttribute"/> settings.
        /// </summary>
        /// <returns>The string rerpesentation</returns>
        public override string ToString() {
            return $"{Scope} count";
        }
    }
}
